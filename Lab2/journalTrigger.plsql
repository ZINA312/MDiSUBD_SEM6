CREATE TABLE STUDENTS_LOG (
    LOG_ID NUMBER PRIMARY KEY,
    ACTION_TYPE VARCHAR2(10),
    OLD_ID NUMBER,
    NEW_ID NUMBER,
    OLD_NAME VARCHAR2(255),
    NEW_NAME VARCHAR2(255),
    OLD_GROUP_ID NUMBER,
    NEW_GROUP_ID NUMBER,
    ACTION_TIME TIMESTAMP,
    USER_NAME VARCHAR2(255)
);

CREATE SEQUENCE students_log_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER students_aiud_log
AFTER INSERT OR UPDATE OR DELETE ON STUDENTS
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO STUDENTS_LOG VALUES (
            students_log_seq.NEXTVAL, 'INSERT',
            NULL, :NEW.ID, NULL, :NEW.NAME,
            NULL, :NEW.GROUP_ID, SYSTIMESTAMP, USER
        );
    ELSIF UPDATING THEN
        INSERT INTO STUDENTS_LOG VALUES (
            students_log_seq.NEXTVAL, 'UPDATE',
            :OLD.ID, :NEW.ID, :OLD.NAME, :NEW.NAME,
            :OLD.GROUP_ID, :NEW.GROUP_ID, SYSTIMESTAMP, USER
        );
    ELSIF DELETING THEN
        INSERT INTO STUDENTS_LOG VALUES (
            students_log_seq.NEXTVAL, 'DELETE',
            :OLD.ID, NULL, :OLD.NAME, NULL,
            :OLD.GROUP_ID, NULL, SYSTIMESTAMP, USER
        );
    END IF;
END;
/